name: Test Application

on:
  workflow_dispatch:
  push:

env:
  PYTHON_VERSION: 3.8

jobs:
  discover_apps:
    runs-on: ubuntu-latest
    name: Discover Applications

    outputs:
      matrix: ${{ steps.find_tests.outputs.matrix }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Find testable apps
        id: find_tests
        run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT

  unit_tests:
    runs-on: ubuntu-latest
    name: Application Unit Tests
    needs: [ discover_apps ]

    strategy:
      fail-fast: false
      matrix:
        matrix: ${{ fromJSON(needs.discover_apps.outputs.matrix) }}

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install poetry
        run: |
          pip install poetry
          poetry env use python${{ env.PYTHON_VERSION }}

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: poetry install --with test

      - name: Test ${{ matrix.app_name }} app
        run: poetry run python fig_tree/manage.py test ${{ matrix.app_name }}

  report-test-status:
    name: Report Test Status
    if: always()
    needs: [ unit_tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Check build status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
